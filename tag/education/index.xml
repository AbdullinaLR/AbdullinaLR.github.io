<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Education | Academic</title>
    <link>https://AbdullinaLR.github.io/tag/education/</link>
      <atom:link href="https://AbdullinaLR.github.io/tag/education/index.xml" rel="self" type="application/rss+xml" />
    <description>Education</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 08 May 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://AbdullinaLR.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Education</title>
      <link>https://AbdullinaLR.github.io/tag/education/</link>
    </image>
    
    <item>
      <title>Markdown</title>
      <link>https://AbdullinaLR.github.io/post/markdown/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      <guid>https://AbdullinaLR.github.io/post/markdown/</guid>
      <description>&lt;h2 id=&#34;markdown&#34;&gt;Markdown&lt;/h2&gt;
&lt;p&gt;Markdown is a lightweight markup language with plain text formatting syntax. The documentation supports Markdown according to CommonMark and its parsing through the Markdig subsystem. The documentation also supports custom Markdown extensions that provide more extensive content on the documentation site.&lt;/p&gt;
&lt;p&gt;You can use any text editor to write Markdown, but we recommend Visual Studio Code with the Docs Authoring Pack extension. The Docs Authoring Pack extension includes editing tools and preview features that let you see what articles will look like on the Documentation site.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Report</title>
      <link>https://AbdullinaLR.github.io/post/otchet/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      <guid>https://AbdullinaLR.github.io/post/otchet/</guid>
      <description>&lt;h2 id=&#34;basic-rules&#34;&gt;Basic rules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Титульный лист. Первый лист работы оформляется строго по образцу, который обычно приводится в методических пособиях по вашему предмету.В нем не простотребуется указать такие элементы, как название образовательного учреждения, вид работы и сведения об исполнителе,но и расположитьих в строгом соответствии со стандартами.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Реферат. В нем нужно указать количество частей, страниц работы,иллюстраций,приложений,таблиц,использованных литературных источников и приложений. Здесь же приводится перечень ключевых слов работы и собственнотекст реферата.Последний подразумевает основные элементы работы от поставленных целей до результатов и рекомендаций по их внедрению.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Введение. Во введении типовой лабораторной работы обычно прописывают цели проводимого исследования и задачи,выполнение которых поможетдостичь поставленных целей.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Основная часть. Важно,чтобы в этом разделе работы былаотражена ее суть,описана методика и результаты проделанной работы.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В основной части прописывают следующие элементы:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;цели проводимого исследования;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;задачи,выполнение которых поможетдостичь поставленных целей;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ход работы,в котором описываются выполненные действия;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;прочие разделы,предусмотренные методическими материалами по изучаемой дисциплине.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Заключение.В этой части работы вам потребуется сделать выводы по полученным в ходе лабораторной работы результатам.Для этого оцените,насколько полно выполнены поставленные задачи.В сложных работах могутприсутствовать и другие элементы, например, рекомендации для дальнейшего применения результатов проведённойработы&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Second post</title>
      <link>https://AbdullinaLR.github.io/post/lastweek2/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      <guid>https://AbdullinaLR.github.io/post/lastweek2/</guid>
      <description>&lt;h2 id=&#34;labs&#34;&gt;Labs&lt;/h2&gt;
&lt;p&gt;Last week was spent doing Lab works №5,№6 and a Personal Project. It was stressful but I had to overcome this in order to be better in my OC class. Because of my gard work I was able to finish everything in time. Plus, two of my friend turned 19, so together we celebrayed their birthdays.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Third post</title>
      <link>https://AbdullinaLR.github.io/post/lastweek3/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      <guid>https://AbdullinaLR.github.io/post/lastweek3/</guid>
      <description>&lt;h2 id=&#34;labs&#34;&gt;Labs&lt;/h2&gt;
&lt;p&gt;Last week was spent doing Lab works №7, №8 and a Personal Project. It was stressful but I had to overcome this in order to be better in my OC class. Because of my gard work I was able to finish everything in time. Also I finished a chinese novel, which was really interesting.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First post</title>
      <link>https://AbdullinaLR.github.io/post/1-post/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      <guid>https://AbdullinaLR.github.io/post/1-post/</guid>
      <description>&lt;h2 id=&#34;labs&#34;&gt;Labs&lt;/h2&gt;
&lt;p&gt;Last week was spent doing Lab works №3,№4 and a Personal Project. It was stressful but I had to overcome this in order to be better in my OC class. Because of my gard work I was able to finish everything in time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Version Control System</title>
      <link>https://AbdullinaLR.github.io/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      <guid>https://AbdullinaLR.github.io/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8/</guid>
      <description>&lt;h2 id=&#34;versioning&#34;&gt;Versioning&lt;/h2&gt;
&lt;p&gt;Version control systems (Version Control System, VCS) are used when working with several many people on the same project. Typically, the main project tree is stored in the local or a remote repository to which access is configured for project participants. When making changes to the content of the project, the version control system allows them to fix, combine changes made by different project participants,rollback to any earlier version of the project, if required. Classical version control systems use a centralized model, assuming the existence of a single repository for storing files. Most of the version control functions are carried out by a special server. The project participant (user) before starting work through certain command gets the version of files it needs. After making changes, the user commits the new version to the repository. This does not remove previous versions. from the central repository and you can return to them at any time. The server can save an incomplete version of the modified files, and produce the so-called delta- compression—keep only changes between successive versions, which allows you to reduce the amount of stored data. Version control systems support traceability and resolution conflicts that may arise when several people work on one file. You can merge (merge) changes made by different participants (auto-mathically or manually), manually select the desired version, cancel the changes altogether or lock files for modification. Depending on the settings, blocking is not allows other users to obtain a working copy or prevents modification working copy of the file by means of the OS file system, thus providing privileged access to only one user working with the file. Version control systems can also provide additional, more flexible functionality. For example, they can support multiple versions of the same file, keeping a common history of changes up to the branch point
versions and each branch&amp;rsquo;s own change histories.Information about which of the participants, when and what changes were made. kind of information is stored in the change log, access to which can be restricted. Unlike classical ones, in distributed version control systems, the centralthe repository is optional. Among the classic VCS, CVS, Subversion are the most famous, and among the distributed nyh - Git, Bazaar, Mercurial. The principles of their work are similar, they differ mainly the syntax of the commands used in the work.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
